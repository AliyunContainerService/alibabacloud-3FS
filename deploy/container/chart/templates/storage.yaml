---
apiVersion: v1
kind: ConfigMap
metadata:
  name: storage-main
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: storage
data:
  storage_main.toml: |
    [[common.log.categories]]
    handlers = [ 'normal', 'err' ]

    [[common.log.handlers]]
    async = true
    name = 'normal'
    start_level = 'NONE'
    writer_type = 'STREAM'

    [[common.log.handlers]]
    async = false
    name = 'err'
    start_level = 'ERR'
    writer_type = 'STREAM'

    [common.monitor]
    collect_period = '60s'
    num_collectors = 1

    [[common.monitor.reporters]]
    type = 'log'

    [[server.base.groups]]
    services = [ 'StorageSerde' ]
    [server.base.groups.io_worker.ibsocket]
    max_sge = 1

    [[server.base.groups]]
    services = [ 'Core' ]
    [server.base.groups.io_worker.ibsocket]
    max_sge = 1

    [server.client.io_worker.ibsocket]
    max_sge = 1
    [server.forward_client.io_worker.ibsocket]
    max_sge = 1

    [server.mgmtd]
    mgmtd_server_addresses = ["RDMA://mgmtd-{{ .Release.Name }}:8000"]

    [server.buffer_pool]
    big_rdmabuf_count = 8
    big_rdmabuf_size = '64MB'
    rdmabuf_count = 128
    rdmabuf_size = '4MB'

    [server.targets]
    target_paths = [{{ range $i := until (.Values.dataPlacement.disksPerNode | int) }}'/mnt/data{{$i}}', {{ end }}]

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: storage-{{ .Release.Name }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: storage
spec:
  podManagementPolicy: Parallel
  serviceName: storage-{{ .Release.Name }}
  ordinals:
    start: 10000
  replicas: {{.Values.dataPlacement.storageNodes}}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: storage
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: storage
    spec:
      containers:
      - name: storage
        image: registry-vpc.cn-beijing.aliyuncs.com/huweiwen-test/3fs-storage:dev
        imagePullPolicy: Always
        lifecycle:
          postStart:
            exec:
              command: [sysctl, -w, fs.aio-max-nr=67108864]
        args:
        - --cfg=/etc/storage/storage_main.toml
        - --app_config.node_id=$(POD_INDEX)
        - --launcher_config.allow_dev_version=true # FIXME
        - --launcher_config.cluster_id={{.Values.clusterID}}
        - --launcher_config.mgmtd_client.mgmtd_server_addresses=["RDMA://mgmtd-{{ .Release.Name }}:8000"]
        - --launcher_config.client.io_worker.ibsocket.max_sge=1
        resources:
          requests:
            aliyun/erdma: "1"
            memory: 4Gi
            cpu: "1"
          limits:
            aliyun/erdma: "1"
            memory: 8Gi
            cpu: "2"
        volumeMounts:
        - name: config
          mountPath: /etc/storage
{{- range $i := until (.Values.dataPlacement.disksPerNode | int) }}
        - name: data-{{ $i }}
          mountPath: /mnt/data{{ $i }}
{{- end }}
        securityContext:
          privileged: true
        env:
        - name: POD_INDEX
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['apps.kubernetes.io/pod-index']
        ports:
        - containerPort: 8000
          name: storage-serde
        - containerPort: 9000
          name: core
      volumes:
      - name: config
        configMap:
          name: storage-main
  volumeClaimTemplates:
{{- range $i := until (.Values.dataPlacement.disksPerNode | int) }}
  - metadata:
      name: data-{{ $i }}
    spec:
      storageClassName: alibabacloud-disk-ephemeral
      accessModes: [ReadWriteOnce]
      resources:
        requests:
          storage: 64Gi
{{- end }}
