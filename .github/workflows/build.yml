name: Build

permissions:
  contents: read
  packages: write

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: apt install
      run: |
        sudo apt-get install -y cmake libuv1-dev liblz4-dev liblzma-dev libdouble-conversion-dev libdwarf-dev libunwind-dev libsnappy-dev \
          libaio-dev libgflags-dev libgoogle-glog-dev libgtest-dev libgmock-dev clang-format-14 clang-14 lld-14 \
          libgoogle-perftools-dev google-perftools libssl-dev libboost-all-dev build-essential meson ninja-build
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: 1.86.0
    - name: install fdb client
      run: curl -LO https://github.com/apple/foundationdb/releases/download/7.1.61/foundationdb-clients_7.1.61-1_amd64.deb && sudo dpkg -i foundationdb-clients_7.1.61-1_amd64.deb

    - uses: Mozilla-Actions/sccache-action@v0.0.9
    - run: ./patches/apply.sh

    - name: Build
      run: ./build.sh
      working-directory: ./super
      env:
        SCCACHE_GHA_ENABLED: "true"
        RUSTC_WRAPPER: "sccache"
        CMAKE_CXX_COMPILER_LAUNCHER: "sccache"
        CMAKE_C_COMPILER_LAUNCHER: "sccache"

    - uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - uses: docker/setup-buildx-action@v3
    - id: meta
      uses: docker/metadata-action@v5
    - run: repo=${{ github.repository }}; echo "PREFIX=ghcr.io/${repo@L}/3fs" >>${GITHUB_ENV}
    - uses: docker/bake-action@v6
      with:
        source: .
        targets: default,reuseable_cache
        files: |
          ./deploy/container/docker-bake.hcl
          cwd://${{ steps.meta.outputs.bake-file-labels }}
        set: |
          3fs-*.output=type=registry
          *.cache-from=type=gha,scope=bake-3fs
          reuseable_cache.cache-to=type=gha,mode=max,scope=bake-3fs
      env:
        TAG: ${{ steps.meta.outputs.version }}
